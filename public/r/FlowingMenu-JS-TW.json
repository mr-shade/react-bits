{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "FlowingMenu-JS-TW",
  "type": "registry:block",
  "title": "FlowingMenu",
  "description": "Liquid flowing active indicator glides between menu items.",
  "dependencies": [
    "gsap",
    "tailwindcss"
  ],
  "files": [
    {
      "path": "public/tailwind/src/tailwind/Components/FlowingMenu/FlowingMenu.jsx",
      "content": "import React from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nfunction FlowingMenu({ items = [] }) {\r\n  return (\r\n    <div className=\"w-full h-full overflow-hidden\">\r\n      <nav className=\"flex flex-col h-full m-0 p-0\">\r\n        {items.map((item, idx) => (\r\n          <MenuItem key={idx} {...item} />\r\n        ))}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MenuItem({ link, text, image }) {\r\n  const itemRef = React.useRef(null);\r\n  const marqueeRef = React.useRef(null);\r\n  const marqueeInnerRef = React.useRef(null);\r\n\r\n  const animationDefaults = { duration: 0.6, ease: 'expo' };\r\n\r\n  const findClosestEdge = (mouseX, mouseY, width, height) => {\r\n    const topEdgeDist = (mouseX - width / 2) ** 2 + mouseY ** 2;\r\n    const bottomEdgeDist = (mouseX - width / 2) ** 2 + (mouseY - height) ** 2;\r\n    return topEdgeDist < bottomEdgeDist ? 'top' : 'bottom';\r\n  };\r\n\r\n  const handleMouseEnter = ev => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current) return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const edge = findClosestEdge(ev.clientX - rect.left, ev.clientY - rect.top, rect.width, rect.height);\r\n\r\n    gsap\r\n      .timeline({ defaults: animationDefaults })\r\n      .set(marqueeRef.current, { y: edge === 'top' ? '-101%' : '101%' })\r\n      .set(marqueeInnerRef.current, { y: edge === 'top' ? '101%' : '-101%' })\r\n      .to([marqueeRef.current, marqueeInnerRef.current], { y: '0%' });\r\n  };\r\n\r\n  const handleMouseLeave = ev => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current) return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const edge = findClosestEdge(ev.clientX - rect.left, ev.clientY - rect.top, rect.width, rect.height);\r\n\r\n    gsap\r\n      .timeline({ defaults: animationDefaults })\r\n      .to(marqueeRef.current, { y: edge === 'top' ? '-101%' : '101%' })\r\n      .to(marqueeInnerRef.current, { y: edge === 'top' ? '101%' : '-101%' });\r\n  };\r\n\r\n  const repeatedMarqueeContent = Array.from({ length: 4 }).map((_, idx) => (\r\n    <React.Fragment key={idx}>\r\n      <span className=\"text-[#060010] uppercase font-normal text-[4vh] leading-[1.2] p-[1vh_1vw_0]\">{text}</span>\r\n      <div\r\n        className=\"w-[200px] h-[7vh] my-[2em] mx-[2vw] p-[1em_0] rounded-[50px] bg-cover bg-center\"\r\n        style={{ backgroundImage: `url(${image})` }}\r\n      />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"flex-1 relative overflow-hidden text-center shadow-[0_-1px_0_0_#fff]\" ref={itemRef}>\r\n      <a\r\n        className=\"flex items-center justify-center h-full relative cursor-pointer uppercase no-underline font-semibold text-white text-[4vh] hover:text-[#060010] focus:text-white focus-visible:text-[#060010]\"\r\n        href={link}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        {text}\r\n      </a>\r\n      <div\r\n        className=\"absolute top-0 left-0 w-full h-full overflow-hidden pointer-events-none bg-white translate-y-[101%]\"\r\n        ref={marqueeRef}\r\n      >\r\n        <div className=\"h-full w-[200%] flex\" ref={marqueeInnerRef}>\r\n          <div className=\"flex items-center relative h-full w-[200%] will-change-transform animate-marquee\">\r\n            {repeatedMarqueeContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlowingMenu;\r\n\r\n// Note: this is also needed\r\n// /** @type {import('tailwindcss').Config} */\r\n// export default {\r\n//   content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\r\n//   theme: {\r\n//     extend: {\r\n//       translate: {\r\n//         '101': '101%',\r\n//       },\r\n//       keyframes: {\r\n//         marquee: {\r\n//           'from': { transform: 'translateX(0%)' },\r\n//           'to': { transform: 'translateX(-50%)' }\r\n//         }\r\n//       },\r\n//       animation: {\r\n//         marquee: 'marquee 15s linear infinite'\r\n//       }\r\n//     }\r\n//   },\r\n//   plugins: [],\r\n// };\r\n",
      "type": "registry:component"
    }
  ]
}