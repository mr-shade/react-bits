{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "TiltedCard-JS-CSS",
  "type": "registry:block",
  "title": "TiltedCard",
  "description": "3D perspective tilt card reacting to pointer.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/default/src/content/Components/TiltedCard/TiltedCard.jsx",
      "content": "import { useRef, useState } from 'react';\r\nimport { motion, useMotionValue, useSpring } from 'motion/react';\r\nimport './TiltedCard.css';\r\n\r\nconst springValues = {\r\n  damping: 30,\r\n  stiffness: 100,\r\n  mass: 2\r\n};\r\n\r\nexport default function TiltedCard({\r\n  imageSrc,\r\n  altText = 'Tilted card image',\r\n  captionText = '',\r\n  containerHeight = '300px',\r\n  containerWidth = '100%',\r\n  imageHeight = '300px',\r\n  imageWidth = '300px',\r\n  scaleOnHover = 1.1,\r\n  rotateAmplitude = 14,\r\n  showMobileWarning = true,\r\n  showTooltip = true,\r\n  overlayContent = null,\r\n  displayOverlayContent = false\r\n}) {\r\n  const ref = useRef(null);\r\n\r\n  const x = useMotionValue();\r\n  const y = useMotionValue();\r\n  const rotateX = useSpring(useMotionValue(0), springValues);\r\n  const rotateY = useSpring(useMotionValue(0), springValues);\r\n  const scale = useSpring(1, springValues);\r\n  const opacity = useSpring(0);\r\n  const rotateFigcaption = useSpring(0, {\r\n    stiffness: 350,\r\n    damping: 30,\r\n    mass: 1\r\n  });\r\n\r\n  const [lastY, setLastY] = useState(0);\r\n\r\n  function handleMouse(e) {\r\n    if (!ref.current) return;\r\n\r\n    const rect = ref.current.getBoundingClientRect();\r\n    const offsetX = e.clientX - rect.left - rect.width / 2;\r\n    const offsetY = e.clientY - rect.top - rect.height / 2;\r\n\r\n    const rotationX = (offsetY / (rect.height / 2)) * -rotateAmplitude;\r\n    const rotationY = (offsetX / (rect.width / 2)) * rotateAmplitude;\r\n\r\n    rotateX.set(rotationX);\r\n    rotateY.set(rotationY);\r\n\r\n    x.set(e.clientX - rect.left);\r\n    y.set(e.clientY - rect.top);\r\n\r\n    const velocityY = offsetY - lastY;\r\n    rotateFigcaption.set(-velocityY * 0.6);\r\n    setLastY(offsetY);\r\n  }\r\n\r\n  function handleMouseEnter() {\r\n    scale.set(scaleOnHover);\r\n    opacity.set(1);\r\n  }\r\n\r\n  function handleMouseLeave() {\r\n    opacity.set(0);\r\n    scale.set(1);\r\n    rotateX.set(0);\r\n    rotateY.set(0);\r\n    rotateFigcaption.set(0);\r\n  }\r\n\r\n  return (\r\n    <figure\r\n      ref={ref}\r\n      className=\"tilted-card-figure\"\r\n      style={{\r\n        height: containerHeight,\r\n        width: containerWidth\r\n      }}\r\n      onMouseMove={handleMouse}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {showMobileWarning && (\r\n        <div className=\"tilted-card-mobile-alert\">This effect is not optimized for mobile. Check on desktop.</div>\r\n      )}\r\n\r\n      <motion.div\r\n        className=\"tilted-card-inner\"\r\n        style={{\r\n          width: imageWidth,\r\n          height: imageHeight,\r\n          rotateX,\r\n          rotateY,\r\n          scale\r\n        }}\r\n      >\r\n        <motion.img\r\n          src={imageSrc}\r\n          alt={altText}\r\n          className=\"tilted-card-img\"\r\n          style={{\r\n            width: imageWidth,\r\n            height: imageHeight\r\n          }}\r\n        />\r\n\r\n        {displayOverlayContent && overlayContent && (\r\n          <motion.div className=\"tilted-card-overlay\">{overlayContent}</motion.div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {showTooltip && (\r\n        <motion.figcaption\r\n          className=\"tilted-card-caption\"\r\n          style={{\r\n            x,\r\n            y,\r\n            opacity,\r\n            rotate: rotateFigcaption\r\n          }}\r\n        >\r\n          {captionText}\r\n        </motion.figcaption>\r\n      )}\r\n    </figure>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/default/src/content/Components/TiltedCard/TiltedCard.css",
      "content": ".tilted-card-figure {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  perspective: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.tilted-card-mobile-alert {\r\n  position: absolute;\r\n  top: 1rem;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  display: none;\r\n}\r\n\r\n@media (max-width: 640px) {\r\n  .tilted-card-mobile-alert {\r\n    display: block;\r\n  }\r\n  .tilted-card-caption {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.tilted-card-inner {\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n.tilted-card-img {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n  will-change: transform;\r\n  transform: translateZ(0);\r\n}\r\n\r\n.tilted-card-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  will-change: transform;\r\n  transform: translateZ(30px);\r\n}\r\n\r\n.tilted-card-caption {\r\n  pointer-events: none;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  padding: 4px 10px;\r\n  font-size: 10px;\r\n  color: #2d2d2d;\r\n  opacity: 0;\r\n  z-index: 3;\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}