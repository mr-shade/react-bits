{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ChromaGrid-JS-CSS",
  "type": "registry:block",
  "title": "ChromaGrid",
  "description": "A responsive grid of grayscale tiles. Hovering the grid reaveals their colors.",
  "dependencies": [
    "gsap"
  ],
  "files": [
    {
      "path": "public/default/src/content/Components/ChromaGrid/ChromaGrid.jsx",
      "content": "import { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './ChromaGrid.css';\r\n\r\nexport const ChromaGrid = ({\r\n  items,\r\n  className = '',\r\n  radius = 300,\r\n  columns = 3,\r\n  rows = 2,\r\n  damping = 0.45,\r\n  fadeOut = 0.6,\r\n  ease = 'power3.out'\r\n}) => {\r\n  const rootRef = useRef(null);\r\n  const fadeRef = useRef(null);\r\n  const setX = useRef(null);\r\n  const setY = useRef(null);\r\n  const pos = useRef({ x: 0, y: 0 });\r\n\r\n  const demo = [\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=8',\r\n      title: 'Alex Rivera',\r\n      subtitle: 'Full Stack Developer',\r\n      handle: '@alexrivera',\r\n      borderColor: '#4F46E5',\r\n      gradient: 'linear-gradient(145deg, #4F46E5, #000)',\r\n      url: 'https://github.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=11',\r\n      title: 'Jordan Chen',\r\n      subtitle: 'DevOps Engineer',\r\n      handle: '@jordanchen',\r\n      borderColor: '#10B981',\r\n      gradient: 'linear-gradient(210deg, #10B981, #000)',\r\n      url: 'https://linkedin.com/in/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=3',\r\n      title: 'Morgan Blake',\r\n      subtitle: 'UI/UX Designer',\r\n      handle: '@morganblake',\r\n      borderColor: '#F59E0B',\r\n      gradient: 'linear-gradient(165deg, #F59E0B, #000)',\r\n      url: 'https://dribbble.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=16',\r\n      title: 'Casey Park',\r\n      subtitle: 'Data Scientist',\r\n      handle: '@caseypark',\r\n      borderColor: '#EF4444',\r\n      gradient: 'linear-gradient(195deg, #EF4444, #000)',\r\n      url: 'https://kaggle.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=25',\r\n      title: 'Sam Kim',\r\n      subtitle: 'Mobile Developer',\r\n      handle: '@thesamkim',\r\n      borderColor: '#8B5CF6',\r\n      gradient: 'linear-gradient(225deg, #8B5CF6, #000)',\r\n      url: 'https://github.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=60',\r\n      title: 'Tyler Rodriguez',\r\n      subtitle: 'Cloud Architect',\r\n      handle: '@tylerrod',\r\n      borderColor: '#06B6D4',\r\n      gradient: 'linear-gradient(135deg, #06B6D4, #000)',\r\n      url: 'https://aws.amazon.com/'\r\n    }\r\n  ];\r\n  const data = items?.length ? items : demo;\r\n\r\n  useEffect(() => {\r\n    const el = rootRef.current;\r\n    if (!el) return;\r\n    setX.current = gsap.quickSetter(el, '--x', 'px');\r\n    setY.current = gsap.quickSetter(el, '--y', 'px');\r\n    const { width, height } = el.getBoundingClientRect();\r\n    pos.current = { x: width / 2, y: height / 2 };\r\n    setX.current(pos.current.x);\r\n    setY.current(pos.current.y);\r\n  }, []);\r\n\r\n  const moveTo = (x, y) => {\r\n    gsap.to(pos.current, {\r\n      x,\r\n      y,\r\n      duration: damping,\r\n      ease,\r\n      onUpdate: () => {\r\n        setX.current?.(pos.current.x);\r\n        setY.current?.(pos.current.y);\r\n      },\r\n      overwrite: true\r\n    });\r\n  };\r\n\r\n  const handleMove = e => {\r\n    const r = rootRef.current.getBoundingClientRect();\r\n    moveTo(e.clientX - r.left, e.clientY - r.top);\r\n    gsap.to(fadeRef.current, { opacity: 0, duration: 0.25, overwrite: true });\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    gsap.to(fadeRef.current, {\r\n      opacity: 1,\r\n      duration: fadeOut,\r\n      overwrite: true\r\n    });\r\n  };\r\n\r\n  const handleCardClick = url => {\r\n    if (url) {\r\n      window.open(url, '_blank', 'noopener,noreferrer');\r\n    }\r\n  };\r\n\r\n  const handleCardMove = e => {\r\n    const card = e.currentTarget;\r\n    const rect = card.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n    card.style.setProperty('--mouse-x', `${x}px`);\r\n    card.style.setProperty('--mouse-y', `${y}px`);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      className={`chroma-grid ${className}`}\r\n      style={{\r\n        '--r': `${radius}px`,\r\n        '--cols': columns,\r\n        '--rows': rows\r\n      }}\r\n      onPointerMove={handleMove}\r\n      onPointerLeave={handleLeave}\r\n    >\r\n      {data.map((c, i) => (\r\n        <article\r\n          key={i}\r\n          className=\"chroma-card\"\r\n          onMouseMove={handleCardMove}\r\n          onClick={() => handleCardClick(c.url)}\r\n          style={{\r\n            '--card-border': c.borderColor || 'transparent',\r\n            '--card-gradient': c.gradient,\r\n            cursor: c.url ? 'pointer' : 'default'\r\n          }}\r\n        >\r\n          <div className=\"chroma-img-wrapper\">\r\n            <img src={c.image} alt={c.title} loading=\"lazy\" />\r\n          </div>\r\n          <footer className=\"chroma-info\">\r\n            <h3 className=\"name\">{c.title}</h3>\r\n            {c.handle && <span className=\"handle\">{c.handle}</span>}\r\n            <p className=\"role\">{c.subtitle}</p>\r\n            {c.location && <span className=\"location\">{c.location}</span>}\r\n          </footer>\r\n        </article>\r\n      ))}\r\n      <div className=\"chroma-overlay\" />\r\n      <div ref={fadeRef} className=\"chroma-fade\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChromaGrid;\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/default/src/content/Components/ChromaGrid/ChromaGrid.css",
      "content": ".chroma-grid {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(var(--cols, 3), 320px);\r\n  grid-auto-rows: auto;\r\n  justify-content: center;\r\n  gap: 0.75rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n\r\n  --x: 50%;\r\n  --y: 50%;\r\n  --r: 220px;\r\n}\r\n\r\n@media (max-width: 1124px) {\r\n  .chroma-grid {\r\n    grid-template-columns: repeat(auto-fit, minmax(320px, 320px));\r\n    gap: 0.5rem;\r\n    padding: 0.5rem;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .chroma-grid {\r\n    grid-template-columns: 320px;\r\n    gap: 0.75rem;\r\n    padding: 1rem;\r\n  }\r\n}\r\n\r\n.chroma-card {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 320px;\r\n  height: auto;\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n  border: 1px solid #333;\r\n  transition: border-color 0.3s ease;\r\n  background: var(--card-gradient);\r\n\r\n  --mouse-x: 50%;\r\n  --mouse-y: 50%;\r\n  --spotlight-color: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.chroma-card:hover {\r\n  border-color: var(--card-border);\r\n}\r\n\r\n.chroma-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  background: radial-gradient(circle at var(--mouse-x) var(--mouse-y), var(--spotlight-color), transparent 70%);\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transition: opacity 0.5s ease;\r\n  z-index: 2;\r\n}\r\n\r\n.chroma-card:hover::before {\r\n  opacity: 1;\r\n}\r\n\r\n.chroma-img-wrapper {\r\n  position: relative;\r\n  z-index: 1;\r\n  flex: 1;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background: transparent;\r\n  transition: background 0.3s ease;\r\n}\r\n\r\n.chroma-img-wrapper img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 10px;\r\n  display: block;\r\n}\r\n\r\n.chroma-info {\r\n  position: relative;\r\n  z-index: 1;\r\n  padding: 0.75rem 1rem;\r\n  color: #fff;\r\n  font-family: system-ui, sans-serif;\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  row-gap: 0.25rem;\r\n  column-gap: 0.75rem;\r\n}\r\n\r\n.chroma-info .role,\r\n.chroma-info .handle {\r\n  color: #aaa;\r\n}\r\n\r\n.chroma-overlay {\r\n  position: absolute;\r\n  inset: 0;\r\n  pointer-events: none;\r\n  z-index: 3;\r\n  backdrop-filter: grayscale(1) brightness(0.78);\r\n  -webkit-backdrop-filter: grayscale(1) brightness(0.78);\r\n  background: rgba(0, 0, 0, 0.001);\r\n\r\n  mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    transparent 0%,\r\n    transparent 15%,\r\n    rgba(0, 0, 0, 0.1) 30%,\r\n    rgba(0, 0, 0, 0.22) 45%,\r\n    rgba(0, 0, 0, 0.35) 60%,\r\n    rgba(0, 0, 0, 0.5) 75%,\r\n    rgba(0, 0, 0, 0.68) 88%,\r\n    white 100%\r\n  );\r\n  -webkit-mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    transparent 0%,\r\n    transparent 15%,\r\n    rgba(0, 0, 0, 0.1) 30%,\r\n    rgba(0, 0, 0, 0.22) 45%,\r\n    rgba(0, 0, 0, 0.35) 60%,\r\n    rgba(0, 0, 0, 0.5) 75%,\r\n    rgba(0, 0, 0, 0.68) 88%,\r\n    white 100%\r\n  );\r\n}\r\n\r\n.chroma-fade {\r\n  position: absolute;\r\n  inset: 0;\r\n  pointer-events: none;\r\n  z-index: 4;\r\n  backdrop-filter: grayscale(1) brightness(0.78);\r\n  -webkit-backdrop-filter: grayscale(1) brightness(0.78);\r\n  background: rgba(0, 0, 0, 0.001);\r\n\r\n  mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    white 0%,\r\n    white 15%,\r\n    rgba(255, 255, 255, 0.9) 30%,\r\n    rgba(255, 255, 255, 0.78) 45%,\r\n    rgba(255, 255, 255, 0.65) 60%,\r\n    rgba(255, 255, 255, 0.5) 75%,\r\n    rgba(255, 255, 255, 0.32) 88%,\r\n    transparent 100%\r\n  );\r\n  -webkit-mask-image: radial-gradient(\r\n    circle var(--r) at var(--x) var(--y),\r\n    white 0%,\r\n    white 15%,\r\n    rgba(255, 255, 255, 0.9) 30%,\r\n    rgba(255, 255, 255, 0.78) 45%,\r\n    rgba(255, 255, 255, 0.65) 60%,\r\n    rgba(255, 255, 255, 0.5) 75%,\r\n    rgba(255, 255, 255, 0.32) 88%,\r\n    transparent 100%\r\n  );\r\n\r\n  opacity: 1;\r\n  transition: opacity 0.25s ease;\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}