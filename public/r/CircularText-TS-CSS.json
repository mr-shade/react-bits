{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "CircularText-TS-CSS",
  "type": "registry:block",
  "title": "CircularText",
  "description": "Layouts characters around a circle with optional rotation animation.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/ts/default/src/ts-default/TextAnimations/CircularText/CircularText.tsx",
      "content": "import React, { useEffect } from 'react';\r\nimport { motion, useAnimation, useMotionValue, MotionValue, Transition } from 'motion/react';\r\n\r\nimport './CircularText.css';\r\ninterface CircularTextProps {\r\n  text: string;\r\n  spinDuration?: number;\r\n  onHover?: 'slowDown' | 'speedUp' | 'pause' | 'goBonkers';\r\n  className?: string;\r\n}\r\n\r\nconst getRotationTransition = (duration: number, from: number, loop: boolean = true) => ({\r\n  from,\r\n  to: from + 360,\r\n  ease: 'linear' as const,\r\n  duration,\r\n  type: 'tween' as const,\r\n  repeat: loop ? Infinity : 0\r\n});\r\n\r\nconst getTransition = (duration: number, from: number) => ({\r\n  rotate: getRotationTransition(duration, from),\r\n  scale: {\r\n    type: 'spring' as const,\r\n    damping: 20,\r\n    stiffness: 300\r\n  }\r\n});\r\n\r\nconst CircularText: React.FC<CircularTextProps> = ({\r\n  text,\r\n  spinDuration = 20,\r\n  onHover = 'speedUp',\r\n  className = ''\r\n}) => {\r\n  const letters = Array.from(text);\r\n  const controls = useAnimation();\r\n  const rotation: MotionValue<number> = useMotionValue(0);\r\n\r\n  useEffect(() => {\r\n    const start = rotation.get();\r\n    controls.start({\r\n      rotate: start + 360,\r\n      scale: 1,\r\n      transition: getTransition(spinDuration, start)\r\n    });\r\n  }, [spinDuration, text, onHover, controls]);\r\n\r\n  const handleHoverStart = () => {\r\n    const start = rotation.get();\r\n\r\n    if (!onHover) return;\r\n\r\n    let transitionConfig: ReturnType<typeof getTransition> | Transition;\r\n    let scaleVal = 1;\r\n\r\n    switch (onHover) {\r\n      case 'slowDown':\r\n        transitionConfig = getTransition(spinDuration * 2, start);\r\n        break;\r\n      case 'speedUp':\r\n        transitionConfig = getTransition(spinDuration / 4, start);\r\n        break;\r\n      case 'pause':\r\n        transitionConfig = {\r\n          rotate: { type: 'spring', damping: 20, stiffness: 300 },\r\n          scale: { type: 'spring', damping: 20, stiffness: 300 }\r\n        };\r\n        break;\r\n      case 'goBonkers':\r\n        transitionConfig = getTransition(spinDuration / 20, start);\r\n        scaleVal = 0.8;\r\n        break;\r\n      default:\r\n        transitionConfig = getTransition(spinDuration, start);\r\n    }\r\n\r\n    controls.start({\r\n      rotate: start + 360,\r\n      scale: scaleVal,\r\n      transition: transitionConfig\r\n    });\r\n  };\r\n\r\n  const handleHoverEnd = () => {\r\n    const start = rotation.get();\r\n    controls.start({\r\n      rotate: start + 360,\r\n      scale: 1,\r\n      transition: getTransition(spinDuration, start)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className={`circular-text ${className}`}\r\n      style={{ rotate: rotation }}\r\n      initial={{ rotate: 0 }}\r\n      animate={controls}\r\n      onMouseEnter={handleHoverStart}\r\n      onMouseLeave={handleHoverEnd}\r\n    >\r\n      {letters.map((letter, i) => {\r\n        const rotationDeg = (360 / letters.length) * i;\r\n        const factor = Math.PI / letters.length;\r\n        const x = factor * i;\r\n        const y = factor * i;\r\n        const transform = `rotateZ(${rotationDeg}deg) translate3d(${x}px, ${y}px, 0)`;\r\n\r\n        return (\r\n          <span key={i} style={{ transform, WebkitTransform: transform }}>\r\n            {letter}\r\n          </span>\r\n        );\r\n      })}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CircularText;\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/ts/default/src/ts-default/TextAnimations/CircularText/CircularText.css",
      "content": ".circular-text {\r\n  margin: 0 auto;\r\n  border-radius: 50%;\r\n  width: 200px;\r\n  height: 200px;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  font-weight: 900;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transform-origin: 50% 50%;\r\n  -webkit-transform-origin: 50% 50%;\r\n}\r\n\r\n.circular-text span {\r\n  position: absolute;\r\n  display: inline-block;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  font-size: 24px;\r\n  transition: all 0.5s cubic-bezier(0, 0, 0, 1);\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}