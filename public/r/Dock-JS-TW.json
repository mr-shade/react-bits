{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Dock-JS-TW",
  "type": "registry:block",
  "title": "Dock",
  "description": "macOS style magnifying dock with proximity scaling of icons.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/tailwind/src/tailwind/Components/Dock/Dock.jsx",
      "content": "'use client';\r\n\r\nimport { motion, useMotionValue, useSpring, useTransform, AnimatePresence } from 'motion/react';\r\nimport { Children, cloneElement, useEffect, useMemo, useRef, useState } from 'react';\r\n\r\nfunction DockItem({ children, className = '', onClick, mouseX, spring, distance, magnification, baseItemSize }) {\r\n  const ref = useRef(null);\r\n  const isHovered = useMotionValue(0);\r\n\r\n  const mouseDistance = useTransform(mouseX, val => {\r\n    const rect = ref.current?.getBoundingClientRect() ?? {\r\n      x: 0,\r\n      width: baseItemSize\r\n    };\r\n    return val - rect.x - baseItemSize / 2;\r\n  });\r\n\r\n  const targetSize = useTransform(mouseDistance, [-distance, 0, distance], [baseItemSize, magnification, baseItemSize]);\r\n  const size = useSpring(targetSize, spring);\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      style={{\r\n        width: size,\r\n        height: size\r\n      }}\r\n      onHoverStart={() => isHovered.set(1)}\r\n      onHoverEnd={() => isHovered.set(0)}\r\n      onFocus={() => isHovered.set(1)}\r\n      onBlur={() => isHovered.set(0)}\r\n      onClick={onClick}\r\n      className={`relative inline-flex items-center justify-center rounded-full bg-[#060010] border-neutral-700 border-2 shadow-md ${className}`}\r\n      tabIndex={0}\r\n      role=\"button\"\r\n      aria-haspopup=\"true\"\r\n    >\r\n      {Children.map(children, child => cloneElement(child, { isHovered }))}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nfunction DockLabel({ children, className = '', ...rest }) {\r\n  const { isHovered } = rest;\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = isHovered.on('change', latest => {\r\n      setIsVisible(latest === 1);\r\n    });\r\n    return () => unsubscribe();\r\n  }, [isHovered]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 0 }}\r\n          animate={{ opacity: 1, y: -10 }}\r\n          exit={{ opacity: 0, y: 0 }}\r\n          transition={{ duration: 0.2 }}\r\n          className={`${className} absolute -top-6 left-1/2 w-fit whitespace-pre rounded-md border border-neutral-700 bg-[#060010] px-2 py-0.5 text-xs text-white`}\r\n          role=\"tooltip\"\r\n          style={{ x: '-50%' }}\r\n        >\r\n          {children}\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nfunction DockIcon({ children, className = '' }) {\r\n  return <div className={`flex items-center justify-center ${className}`}>{children}</div>;\r\n}\r\n\r\nexport default function Dock({\r\n  items,\r\n  className = '',\r\n  spring = { mass: 0.1, stiffness: 150, damping: 12 },\r\n  magnification = 70,\r\n  distance = 200,\r\n  panelHeight = 64,\r\n  dockHeight = 256,\r\n  baseItemSize = 50\r\n}) {\r\n  const mouseX = useMotionValue(Infinity);\r\n  const isHovered = useMotionValue(0);\r\n\r\n  const maxHeight = useMemo(\r\n    () => Math.max(dockHeight, magnification + magnification / 2 + 4),\r\n    [magnification, dockHeight]\r\n  );\r\n  const heightRow = useTransform(isHovered, [0, 1], [panelHeight, maxHeight]);\r\n  const height = useSpring(heightRow, spring);\r\n\r\n  return (\r\n    <motion.div style={{ height, scrollbarWidth: 'none' }} className=\"mx-2 flex max-w-full items-center\">\r\n      <motion.div\r\n        onMouseMove={({ pageX }) => {\r\n          isHovered.set(1);\r\n          mouseX.set(pageX);\r\n        }}\r\n        onMouseLeave={() => {\r\n          isHovered.set(0);\r\n          mouseX.set(Infinity);\r\n        }}\r\n        className={`${className} absolute bottom-2 left-1/2 transform -translate-x-1/2 flex items-end w-fit gap-4 rounded-2xl border-neutral-700 border-2 pb-2 px-4`}\r\n        style={{ height: panelHeight }}\r\n        role=\"toolbar\"\r\n        aria-label=\"Application dock\"\r\n      >\r\n        {items.map((item, index) => (\r\n          <DockItem\r\n            key={index}\r\n            onClick={item.onClick}\r\n            className={item.className}\r\n            mouseX={mouseX}\r\n            spring={spring}\r\n            distance={distance}\r\n            magnification={magnification}\r\n            baseItemSize={baseItemSize}\r\n          >\r\n            <DockIcon>{item.icon}</DockIcon>\r\n            <DockLabel>{item.label}</DockLabel>\r\n          </DockItem>\r\n        ))}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}