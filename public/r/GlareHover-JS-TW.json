{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "GlareHover-JS-TW",
  "type": "registry:block",
  "title": "GlareHover",
  "description": "Adds a realistic moving glare highlight on hover over any element.",
  "files": [
    {
      "path": "public/tailwind/src/tailwind/Animations/GlareHover/GlareHover.jsx",
      "content": "import { useRef } from 'react';\r\n\r\nconst GlareHover = ({\r\n  width = '500px',\r\n  height = '500px',\r\n  background = '#000',\r\n  borderRadius = '10px',\r\n  borderColor = '#333',\r\n  children,\r\n  glareColor = '#ffffff',\r\n  glareOpacity = 0.5,\r\n  glareAngle = -45,\r\n  glareSize = 250,\r\n  transitionDuration = 650,\r\n  playOnce = false,\r\n  className = '',\r\n  style = {}\r\n}) => {\r\n  const hex = glareColor.replace('#', '');\r\n  let rgba = glareColor;\r\n  if (/^[\\dA-Fa-f]{6}$/.test(hex)) {\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n    rgba = `rgba(${r}, ${g}, ${b}, ${glareOpacity})`;\r\n  } else if (/^[\\dA-Fa-f]{3}$/.test(hex)) {\r\n    const r = parseInt(hex[0] + hex[0], 16);\r\n    const g = parseInt(hex[1] + hex[1], 16);\r\n    const b = parseInt(hex[2] + hex[2], 16);\r\n    rgba = `rgba(${r}, ${g}, ${b}, ${glareOpacity})`;\r\n  }\r\n\r\n  const overlayRef = useRef(null);\r\n\r\n  const animateIn = () => {\r\n    const el = overlayRef.current;\r\n    if (!el) return;\r\n\r\n    el.style.transition = 'none';\r\n    el.style.backgroundPosition = '-100% -100%, 0 0';\r\n    el.style.transition = `${transitionDuration}ms ease`;\r\n    el.style.backgroundPosition = '100% 100%, 0 0';\r\n  };\r\n\r\n  const animateOut = () => {\r\n    const el = overlayRef.current;\r\n    if (!el) return;\r\n\r\n    if (playOnce) {\r\n      el.style.transition = 'none';\r\n      el.style.backgroundPosition = '-100% -100%, 0 0';\r\n    } else {\r\n      el.style.transition = `${transitionDuration}ms ease`;\r\n      el.style.backgroundPosition = '-100% -100%, 0 0';\r\n    }\r\n  };\r\n\r\n  const overlayStyle = {\r\n    position: 'absolute',\r\n    inset: 0,\r\n    background: `linear-gradient(${glareAngle}deg,\r\n        hsla(0,0%,0%,0) 60%,\r\n        ${rgba} 70%,\r\n        hsla(0,0%,0%,0) 100%)`,\r\n    backgroundSize: `${glareSize}% ${glareSize}%, 100% 100%`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: '-100% -100%, 0 0',\r\n    pointerEvents: 'none'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`relative grid place-items-center overflow-hidden border cursor-pointer ${className}`}\r\n      style={{\r\n        width,\r\n        height,\r\n        background,\r\n        borderRadius,\r\n        borderColor,\r\n        ...style\r\n      }}\r\n      onMouseEnter={animateIn}\r\n      onMouseLeave={animateOut}\r\n    >\r\n      <div ref={overlayRef} style={overlayStyle} />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlareHover;\r\n",
      "type": "registry:component"
    }
  ]
}