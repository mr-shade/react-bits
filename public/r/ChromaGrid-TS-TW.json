{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ChromaGrid-TS-TW",
  "type": "registry:block",
  "title": "ChromaGrid",
  "description": "A responsive grid of grayscale tiles. Hovering the grid reaveals their colors.",
  "dependencies": [
    "gsap"
  ],
  "files": [
    {
      "path": "public/ts/tailwind/src/ts-tailwind/Components/ChromaGrid/ChromaGrid.tsx",
      "content": "import React, { useRef, useEffect } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nexport interface ChromaItem {\r\n  image: string;\r\n  title: string;\r\n  subtitle: string;\r\n  handle?: string;\r\n  location?: string;\r\n  borderColor?: string;\r\n  gradient?: string;\r\n  url?: string;\r\n}\r\n\r\nexport interface ChromaGridProps {\r\n  items?: ChromaItem[];\r\n  className?: string;\r\n  radius?: number;\r\n  damping?: number;\r\n  fadeOut?: number;\r\n  ease?: string;\r\n}\r\n\r\ntype SetterFn = (v: number | string) => void;\r\n\r\nconst ChromaGrid: React.FC<ChromaGridProps> = ({\r\n  items,\r\n  className = '',\r\n  radius = 300,\r\n  damping = 0.45,\r\n  fadeOut = 0.6,\r\n  ease = 'power3.out'\r\n}) => {\r\n  const rootRef = useRef<HTMLDivElement>(null);\r\n  const fadeRef = useRef<HTMLDivElement>(null);\r\n  const setX = useRef<SetterFn | null>(null);\r\n  const setY = useRef<SetterFn | null>(null);\r\n  const pos = useRef({ x: 0, y: 0 });\r\n\r\n  const demo: ChromaItem[] = [\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=8',\r\n      title: 'Alex Rivera',\r\n      subtitle: 'Full Stack Developer',\r\n      handle: '@alexrivera',\r\n      borderColor: '#4F46E5',\r\n      gradient: 'linear-gradient(145deg,#4F46E5,#000)',\r\n      url: 'https://github.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=11',\r\n      title: 'Jordan Chen',\r\n      subtitle: 'DevOps Engineer',\r\n      handle: '@jordanchen',\r\n      borderColor: '#10B981',\r\n      gradient: 'linear-gradient(210deg,#10B981,#000)',\r\n      url: 'https://linkedin.com/in/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=3',\r\n      title: 'Morgan Blake',\r\n      subtitle: 'UI/UX Designer',\r\n      handle: '@morganblake',\r\n      borderColor: '#F59E0B',\r\n      gradient: 'linear-gradient(165deg,#F59E0B,#000)',\r\n      url: 'https://dribbble.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=16',\r\n      title: 'Casey Park',\r\n      subtitle: 'Data Scientist',\r\n      handle: '@caseypark',\r\n      borderColor: '#EF4444',\r\n      gradient: 'linear-gradient(195deg,#EF4444,#000)',\r\n      url: 'https://kaggle.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=25',\r\n      title: 'Sam Kim',\r\n      subtitle: 'Mobile Developer',\r\n      handle: '@thesamkim',\r\n      borderColor: '#8B5CF6',\r\n      gradient: 'linear-gradient(225deg,#8B5CF6,#000)',\r\n      url: 'https://github.com/'\r\n    },\r\n    {\r\n      image: 'https://i.pravatar.cc/300?img=60',\r\n      title: 'Tyler Rodriguez',\r\n      subtitle: 'Cloud Architect',\r\n      handle: '@tylerrod',\r\n      borderColor: '#06B6D4',\r\n      gradient: 'linear-gradient(135deg,#06B6D4,#000)',\r\n      url: 'https://aws.amazon.com/'\r\n    }\r\n  ];\r\n\r\n  const data = items?.length ? items : demo;\r\n\r\n  useEffect(() => {\r\n    const el = rootRef.current;\r\n    if (!el) return;\r\n    setX.current = gsap.quickSetter(el, '--x', 'px') as SetterFn;\r\n    setY.current = gsap.quickSetter(el, '--y', 'px') as SetterFn;\r\n    const { width, height } = el.getBoundingClientRect();\r\n    pos.current = { x: width / 2, y: height / 2 };\r\n    setX.current(pos.current.x);\r\n    setY.current(pos.current.y);\r\n  }, []);\r\n\r\n  const moveTo = (x: number, y: number) => {\r\n    gsap.to(pos.current, {\r\n      x,\r\n      y,\r\n      duration: damping,\r\n      ease,\r\n      onUpdate: () => {\r\n        setX.current?.(pos.current.x);\r\n        setY.current?.(pos.current.y);\r\n      },\r\n      overwrite: true\r\n    });\r\n  };\r\n\r\n  const handleMove = (e: React.PointerEvent) => {\r\n    const r = rootRef.current!.getBoundingClientRect();\r\n    moveTo(e.clientX - r.left, e.clientY - r.top);\r\n    gsap.to(fadeRef.current, { opacity: 0, duration: 0.25, overwrite: true });\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    gsap.to(fadeRef.current, {\r\n      opacity: 1,\r\n      duration: fadeOut,\r\n      overwrite: true\r\n    });\r\n  };\r\n\r\n  const handleCardClick = (url?: string) => {\r\n    if (url) window.open(url, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  const handleCardMove: React.MouseEventHandler<HTMLElement> = e => {\r\n    const c = e.currentTarget as HTMLElement;\r\n    const rect = c.getBoundingClientRect();\r\n    c.style.setProperty('--mouse-x', `${e.clientX - rect.left}px`);\r\n    c.style.setProperty('--mouse-y', `${e.clientY - rect.top}px`);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      onPointerMove={handleMove}\r\n      onPointerLeave={handleLeave}\r\n      className={`relative w-full h-full flex flex-wrap justify-center items-start gap-3 ${className}`}\r\n      style={\r\n        {\r\n          '--r': `${radius}px`,\r\n          '--x': '50%',\r\n          '--y': '50%'\r\n        } as React.CSSProperties\r\n      }\r\n    >\r\n      {data.map((c, i) => (\r\n        <article\r\n          key={i}\r\n          onMouseMove={handleCardMove}\r\n          onClick={() => handleCardClick(c.url)}\r\n          className=\"group relative flex flex-col w-[300px] rounded-[20px] overflow-hidden border-2 border-transparent transition-colors duration-300 cursor-pointer\"\r\n          style={\r\n            {\r\n              '--card-border': c.borderColor || 'transparent',\r\n              background: c.gradient,\r\n              '--spotlight-color': 'rgba(255,255,255,0.3)'\r\n            } as React.CSSProperties\r\n          }\r\n        >\r\n          <div\r\n            className=\"absolute inset-0 pointer-events-none transition-opacity duration-500 z-20 opacity-0 group-hover:opacity-100\"\r\n            style={{\r\n              background:\r\n                'radial-gradient(circle at var(--mouse-x) var(--mouse-y), var(--spotlight-color), transparent 70%)'\r\n            }}\r\n          />\r\n          <div className=\"relative z-10 flex-1 p-[10px] box-border\">\r\n            <img src={c.image} alt={c.title} loading=\"lazy\" className=\"w-full h-full object-cover rounded-[10px]\" />\r\n          </div>\r\n          <footer className=\"relative z-10 p-3 text-white font-sans grid grid-cols-[1fr_auto] gap-x-3 gap-y-1\">\r\n            <h3 className=\"m-0 text-[1.05rem] font-semibold\">{c.title}</h3>\r\n            {c.handle && <span className=\"text-[0.95rem] opacity-80 text-right\">{c.handle}</span>}\r\n            <p className=\"m-0 text-[0.85rem] opacity-85\">{c.subtitle}</p>\r\n            {c.location && <span className=\"text-[0.85rem] opacity-85 text-right\">{c.location}</span>}\r\n          </footer>\r\n        </article>\r\n      ))}\r\n      <div\r\n        className=\"absolute inset-0 pointer-events-none z-30\"\r\n        style={{\r\n          backdropFilter: 'grayscale(1) brightness(0.78)',\r\n          WebkitBackdropFilter: 'grayscale(1) brightness(0.78)',\r\n          background: 'rgba(0,0,0,0.001)',\r\n          maskImage:\r\n            'radial-gradient(circle var(--r) at var(--x) var(--y),transparent 0%,transparent 15%,rgba(0,0,0,0.10) 30%,rgba(0,0,0,0.22)45%,rgba(0,0,0,0.35)60%,rgba(0,0,0,0.50)75%,rgba(0,0,0,0.68)88%,white 100%)',\r\n          WebkitMaskImage:\r\n            'radial-gradient(circle var(--r) at var(--x) var(--y),transparent 0%,transparent 15%,rgba(0,0,0,0.10) 30%,rgba(0,0,0,0.22)45%,rgba(0,0,0,0.35)60%,rgba(0,0,0,0.50)75%,rgba(0,0,0,0.68)88%,white 100%)'\r\n        }}\r\n      />\r\n      <div\r\n        ref={fadeRef}\r\n        className=\"absolute inset-0 pointer-events-none transition-opacity duration-[250ms] z-40\"\r\n        style={{\r\n          backdropFilter: 'grayscale(1) brightness(0.78)',\r\n          WebkitBackdropFilter: 'grayscale(1) brightness(0.78)',\r\n          background: 'rgba(0,0,0,0.001)',\r\n          maskImage:\r\n            'radial-gradient(circle var(--r) at var(--x) var(--y),white 0%,white 15%,rgba(255,255,255,0.90)30%,rgba(255,255,255,0.78)45%,rgba(255,255,255,0.65)60%,rgba(255,255,255,0.50)75%,rgba(255,255,255,0.32)88%,transparent 100%)',\r\n          WebkitMaskImage:\r\n            'radial-gradient(circle var(--r) at var(--x) var(--y),white 0%,white 15%,rgba(255,255,255,0.90)30%,rgba(255,255,255,0.78)45%,rgba(255,255,255,0.65)60%,rgba(255,255,255,0.50)75%,rgba(255,255,255,0.32)88%,transparent 100%)',\r\n          opacity: 1\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChromaGrid;\r\n",
      "type": "registry:component"
    }
  ]
}