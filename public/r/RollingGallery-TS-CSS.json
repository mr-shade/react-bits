{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "RollingGallery-TS-CSS",
  "type": "registry:block",
  "title": "RollingGallery",
  "description": "3D rolling gallery with drag controls.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "public/ts/default/src/ts-default/Components/RollingGallery/RollingGallery.tsx",
      "content": "import React, { useEffect, useRef, useState } from 'react';\r\nimport { motion, useMotionValue, useAnimation, useTransform, PanInfo } from 'motion/react';\r\nimport './RollingGallery.css';\r\n\r\nconst IMGS: string[] = [\r\n  'https://images.unsplash.com/photo-1528181304800-259b08848526?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1506665531195-3566af2b4dfa?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?q=80&w=3456&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1495103033382-fe343886b671?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1506781961370-37a89d6b3095?q=80&w=3264&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1599576838688-8a6c11263108?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1494094892896-7f14a4433b7a?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://plus.unsplash.com/premium_photo-1664910706524-e783eed89e71?q=80&w=3869&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1503788311183-fa3bf9c4bc32?q=80&w=3870&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n  'https://images.unsplash.com/photo-1585970480901-90d6bb2a48b5?q=80&w=3774&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D'\r\n];\r\n\r\ninterface RollingGalleryProps {\r\n  autoplay?: boolean;\r\n  pauseOnHover?: boolean;\r\n  images?: string[];\r\n}\r\n\r\nconst RollingGallery: React.FC<RollingGalleryProps> = ({ autoplay = false, pauseOnHover = false, images = [] }) => {\r\n  images = IMGS;\r\n  const [isScreenSizeSm, setIsScreenSizeSm] = useState<boolean>(window.innerWidth <= 640);\r\n\r\n  const cylinderWidth: number = isScreenSizeSm ? 1100 : 1800;\r\n  const faceCount: number = images.length;\r\n  const faceWidth: number = (cylinderWidth / faceCount) * 1.5;\r\n  const dragFactor: number = 0.05;\r\n  const radius: number = cylinderWidth / (2 * Math.PI);\r\n\r\n  const rotation = useMotionValue(0);\r\n  const controls = useAnimation();\r\n  const autoplayRef = useRef<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const handleDrag = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void => {\r\n    controls.stop();\r\n    rotation.set(rotation.get() + info.offset.x * dragFactor);\r\n  };\r\n\r\n  const handleDragEnd = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void => {\r\n    controls.start({\r\n      rotateY: rotation.get() + info.velocity.x * dragFactor,\r\n      transition: {\r\n        type: 'spring',\r\n        stiffness: 60,\r\n        damping: 20,\r\n        mass: 0.1,\r\n        ease: 'easeOut'\r\n      }\r\n    });\r\n  };\r\n\r\n  const transform = useTransform(rotation, (value: number) => {\r\n    return `rotate3d(0, 1, 0, ${value}deg)`;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (autoplay) {\r\n      autoplayRef.current = setInterval(() => {\r\n        controls.start({\r\n          rotateY: rotation.get() - 360 / faceCount,\r\n          transition: { duration: 2, ease: 'linear' }\r\n        });\r\n        rotation.set(rotation.get() - 360 / faceCount);\r\n      }, 2000);\r\n\r\n      return () => {\r\n        if (autoplayRef.current) clearInterval(autoplayRef.current);\r\n      };\r\n    }\r\n  }, [autoplay, rotation, controls, faceCount]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsScreenSizeSm(window.innerWidth <= 640);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handleMouseEnter = (): void => {\r\n    if (autoplay && pauseOnHover) {\r\n      if (autoplayRef.current) clearInterval(autoplayRef.current);\r\n      controls.stop();\r\n    }\r\n  };\r\n\r\n  const handleMouseLeave = (): void => {\r\n    if (autoplay && pauseOnHover) {\r\n      controls.start({\r\n        rotateY: rotation.get() - 360 / faceCount,\r\n        transition: { duration: 2, ease: 'linear' }\r\n      });\r\n      rotation.set(rotation.get() - 360 / faceCount);\r\n\r\n      autoplayRef.current = setInterval(() => {\r\n        controls.start({\r\n          rotateY: rotation.get() - 360 / faceCount,\r\n          transition: { duration: 2, ease: 'linear' }\r\n        });\r\n        rotation.set(rotation.get() - 360 / faceCount);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <div className=\"gallery-gradient gallery-gradient-left\"></div>\r\n      <div className=\"gallery-gradient gallery-gradient-right\"></div>\r\n      <div className=\"gallery-content\">\r\n        <motion.div\r\n          drag=\"x\"\r\n          className=\"gallery-track\"\r\n          onMouseEnter={handleMouseEnter}\r\n          onMouseLeave={handleMouseLeave}\r\n          style={{\r\n            transform: transform,\r\n            rotateY: rotation,\r\n            width: cylinderWidth,\r\n            transformStyle: 'preserve-3d'\r\n          }}\r\n          onDrag={handleDrag}\r\n          onDragEnd={handleDragEnd}\r\n          animate={controls}\r\n        >\r\n          {images.map((url, i) => (\r\n            <div\r\n              key={i}\r\n              className=\"gallery-item\"\r\n              style={{\r\n                width: `${faceWidth}px`,\r\n                transform: `rotateY(${(360 / faceCount) * i}deg) translateZ(${radius}px)`\r\n              }}\r\n            >\r\n              <img src={url} alt=\"gallery\" className=\"gallery-img\" />\r\n            </div>\r\n          ))}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RollingGallery;\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/ts/default/src/ts-default/Components/RollingGallery/RollingGallery.css",
      "content": ".gallery-container {\r\n  position: relative;\r\n  height: 500px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.gallery-gradient {\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n  width: 48px;\r\n  z-index: 10;\r\n}\r\n\r\n.gallery-gradient-left {\r\n  left: 0;\r\n  background: linear-gradient(to left, rgba(0, 0, 0, 0) 0%, #060010 100%);\r\n}\r\n\r\n.gallery-gradient-right {\r\n  right: 0;\r\n  background: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, #060010 100%);\r\n}\r\n\r\n.gallery-content {\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  perspective: 1000px;\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n.gallery-track {\r\n  display: flex;\r\n  height: auto;\r\n  min-height: 200px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: grab;\r\n  transform-style: preserve-3d;\r\n  width: 100%;\r\n}\r\n\r\n.gallery-item {\r\n  position: absolute;\r\n  display: flex;\r\n  height: fit-content;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8%;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n.gallery-img {\r\n  pointer-events: none;\r\n  height: 120px;\r\n  width: 300px;\r\n  border-radius: 15px;\r\n  border: 3px solid #fff;\r\n  object-fit: cover;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.gallery-item:hover .gallery-img {\r\n  transform: scale(1.05);\r\n  transition: 0.3s ease;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .gallery-item {\r\n    padding: 6%;\r\n  }\r\n\r\n  .gallery-img {\r\n    height: 100px;\r\n    width: 220px;\r\n  }\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}