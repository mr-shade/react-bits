{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "GlassIcons-TS-TW",
  "type": "registry:block",
  "title": "GlassIcons",
  "description": "Icon set styled with frosted glass blur.",
  "files": [
    {
      "path": "public/ts/tailwind/src/ts-tailwind/Components/GlassIcons/GlassIcons.tsx",
      "content": "import React from 'react';\r\n\r\nexport interface GlassIconsItem {\r\n  icon: React.ReactElement;\r\n  color: string;\r\n  label: string;\r\n  customClass?: string;\r\n}\r\n\r\nexport interface GlassIconsProps {\r\n  items: GlassIconsItem[];\r\n  className?: string;\r\n}\r\n\r\nconst gradientMapping: Record<string, string> = {\r\n  blue: 'linear-gradient(hsl(223, 90%, 50%), hsl(208, 90%, 50%))',\r\n  purple: 'linear-gradient(hsl(283, 90%, 50%), hsl(268, 90%, 50%))',\r\n  red: 'linear-gradient(hsl(3, 90%, 50%), hsl(348, 90%, 50%))',\r\n  indigo: 'linear-gradient(hsl(253, 90%, 50%), hsl(238, 90%, 50%))',\r\n  orange: 'linear-gradient(hsl(43, 90%, 50%), hsl(28, 90%, 50%))',\r\n  green: 'linear-gradient(hsl(123, 90%, 40%), hsl(108, 90%, 40%))'\r\n};\r\n\r\nconst GlassIcons: React.FC<GlassIconsProps> = ({ items, className }) => {\r\n  const getBackgroundStyle = (color: string): React.CSSProperties => {\r\n    if (gradientMapping[color]) {\r\n      return { background: gradientMapping[color] };\r\n    }\r\n    return { background: color };\r\n  };\r\n\r\n  return (\r\n    <div className={`grid gap-[5em] grid-cols-2 md:grid-cols-3 mx-auto py-[3em] overflow-visible ${className || ''}`}>\r\n      {items.map((item, index) => (\r\n        <button\r\n          key={index}\r\n          type=\"button\"\r\n          aria-label={item.label}\r\n          className={`relative bg-transparent outline-none w-[4.5em] h-[4.5em] [perspective:24em] [transform-style:preserve-3d] [-webkit-tap-highlight-color:transparent] group ${\r\n            item.customClass || ''\r\n          }`}\r\n        >\r\n          <span\r\n            className=\"absolute top-0 left-0 w-full h-full rounded-[1.25em] block transition-[opacity,transform] duration-300 ease-[cubic-bezier(0.83,0,0.17,1)] origin-[100%_100%] rotate-[15deg] group-hover:[transform:rotate(25deg)_translate3d(-0.5em,-0.5em,0.5em)]\"\r\n            style={{\r\n              ...getBackgroundStyle(item.color),\r\n              boxShadow: '0.5em -0.5em 0.75em hsla(223, 10%, 10%, 0.15)'\r\n            }}\r\n          ></span>\r\n\r\n          <span\r\n            className=\"absolute top-0 left-0 w-full h-full rounded-[1.25em] bg-[hsla(0,0%,100%,0.15)] transition-[opacity,transform] duration-300 ease-[cubic-bezier(0.83,0,0.17,1)] origin-[80%_50%] flex backdrop-blur-[0.75em] [-webkit-backdrop-filter:blur(0.75em)] transform group-hover:[transform:translateZ(2em)]\"\r\n            style={{\r\n              boxShadow: '0 0 0 0.1em hsla(0, 0%, 100%, 0.3) inset'\r\n            }}\r\n          >\r\n            <span className=\"m-auto w-[1.5em] h-[1.5em] flex items-center justify-center\" aria-hidden=\"true\">\r\n              {item.icon}\r\n            </span>\r\n          </span>\r\n\r\n          <span className=\"absolute top-full left-0 right-0 text-center whitespace-nowrap leading-[2] text-base opacity-0 transition-[opacity,transform] duration-300 ease-[cubic-bezier(0.83,0,0.17,1)] translate-y-0 group-hover:opacity-100 group-hover:[transform:translateY(20%)]\">\r\n            {item.label}\r\n          </span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlassIcons;\r\n",
      "type": "registry:component"
    }
  ]
}