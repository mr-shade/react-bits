{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "FlowingMenu-TS-CSS",
  "type": "registry:block",
  "title": "FlowingMenu",
  "description": "Liquid flowing active indicator glides between menu items.",
  "dependencies": [
    "gsap"
  ],
  "files": [
    {
      "path": "public/ts/default/src/ts-default/Components/FlowingMenu/FlowingMenu.tsx",
      "content": "import React from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nimport './FlowingMenu.css';\r\n\r\ninterface MenuItemProps {\r\n  link: string;\r\n  text: string;\r\n  image: string;\r\n}\r\n\r\ninterface FlowingMenuProps {\r\n  items?: MenuItemProps[];\r\n}\r\n\r\nconst FlowingMenu: React.FC<FlowingMenuProps> = ({ items = [] }) => {\r\n  return (\r\n    <div className=\"menu-wrap\">\r\n      <nav className=\"menu\">\r\n        {items.map((item, idx) => (\r\n          <MenuItem key={idx} {...item} />\r\n        ))}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MenuItem: React.FC<MenuItemProps> = ({ link, text, image }) => {\r\n  const itemRef = React.useRef<HTMLDivElement>(null);\r\n  const marqueeRef = React.useRef<HTMLDivElement>(null);\r\n  const marqueeInnerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const animationDefaults: gsap.TweenVars = { duration: 0.6, ease: 'expo' };\r\n\r\n  const distMetric = (x: number, y: number, x2: number, y2: number): number => {\r\n    const xDiff = x - x2;\r\n    const yDiff = y - y2;\r\n    return xDiff * xDiff + yDiff * yDiff;\r\n  };\r\n\r\n  const findClosestEdge = (mouseX: number, mouseY: number, width: number, height: number): 'top' | 'bottom' => {\r\n    const topEdgeDist = distMetric(mouseX, mouseY, width / 2, 0);\r\n    const bottomEdgeDist = distMetric(mouseX, mouseY, width / 2, height);\r\n    return topEdgeDist < bottomEdgeDist ? 'top' : 'bottom';\r\n  };\r\n\r\n  const handleMouseEnter = (ev: React.MouseEvent<HTMLAnchorElement>) => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current) return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    const edge = findClosestEdge(x, y, rect.width, rect.height);\r\n\r\n    const tl = gsap.timeline({ defaults: animationDefaults });\r\n\r\n    tl.set(marqueeRef.current, { y: edge === 'top' ? '-101%' : '101%' }, 0)\r\n      .set(marqueeInnerRef.current, { y: edge === 'top' ? '101%' : '-101%' }, 0)\r\n      .to([marqueeRef.current, marqueeInnerRef.current], { y: '0%' }, 0);\r\n  };\r\n\r\n  const handleMouseLeave = (ev: React.MouseEvent<HTMLAnchorElement>) => {\r\n    if (!itemRef.current || !marqueeRef.current || !marqueeInnerRef.current) return;\r\n    const rect = itemRef.current.getBoundingClientRect();\r\n    const x = ev.clientX - rect.left;\r\n    const y = ev.clientY - rect.top;\r\n    const edge = findClosestEdge(x, y, rect.width, rect.height);\r\n\r\n    const tl = gsap.timeline({ defaults: animationDefaults });\r\n\r\n    tl.to(marqueeRef.current, { y: edge === 'top' ? '-101%' : '101%' }, 0).to(\r\n      marqueeInnerRef.current,\r\n      { y: edge === 'top' ? '101%' : '-101%' },\r\n      0\r\n    );\r\n  };\r\n\r\n  const repeatedMarqueeContent = React.useMemo(() => {\r\n    return Array.from({ length: 4 }).map((_, idx) => (\r\n      <React.Fragment key={idx}>\r\n        <span>{text}</span>\r\n        <div className=\"marquee__img\" style={{ backgroundImage: `url(${image})` }} />\r\n      </React.Fragment>\r\n    ));\r\n  }, [text, image]);\r\n\r\n  return (\r\n    <div className=\"menu__item\" ref={itemRef}>\r\n      <a className=\"menu__item-link\" href={link} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n        {text}\r\n      </a>\r\n      <div className=\"marquee\" ref={marqueeRef}>\r\n        <div className=\"marquee__inner-wrap\" ref={marqueeInnerRef}>\r\n          <div className=\"marquee__inner\" aria-hidden=\"true\">\r\n            {repeatedMarqueeContent}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowingMenu;\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/ts/default/src/ts-default/Components/FlowingMenu/FlowingMenu.css",
      "content": ".menu-wrap {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.menu {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.menu__item {\r\n  flex: 1;\r\n  position: relative;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  box-shadow: 0 -1px #fff;\r\n}\r\n\r\n.menu__item-link {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  position: relative;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  white-space: nowrap;\r\n  font-weight: 600;\r\n  color: #fff;\r\n  font-size: 4vh;\r\n}\r\n\r\n.menu__item-link:hover {\r\n  color: #060010;\r\n}\r\n\r\n.menu__item-link:focus:not(:focus-visible) {\r\n  color: #fff;\r\n}\r\n\r\n.marquee {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  background: #fff;\r\n  transform: translate3d(0, 101%, 0);\r\n  transition: transform 0.6s ease-expo;\r\n}\r\n\r\n.marquee__inner-wrap {\r\n  height: 100%;\r\n  width: 200%;\r\n  display: flex;\r\n  transform: translateX(0);\r\n}\r\n\r\n.marquee__inner {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  height: 100%;\r\n  width: 200%;\r\n  will-change: transform;\r\n  animation: marquee 15s linear infinite;\r\n}\r\n\r\n.marquee span {\r\n  color: #060010;\r\n  white-space: nowrap;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 4vh;\r\n  line-height: 1.2;\r\n  padding: 1vh 1vw 0;\r\n}\r\n\r\n.marquee__img {\r\n  width: 200px;\r\n  height: 7vh;\r\n  margin: 2em 2vw;\r\n  padding: 1em 0;\r\n  border-radius: 50px;\r\n  background-size: cover;\r\n  background-position: 50% 50%;\r\n}\r\n\r\n.menu__item-link:hover + .marquee {\r\n  transform: translate3d(0, 0%, 0);\r\n}\r\n\r\n@keyframes marquee {\r\n  from {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  to {\r\n    transform: translateX(-50%);\r\n  }\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}