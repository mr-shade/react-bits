{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "GridMotion-TS-TW",
  "type": "registry:block",
  "title": "GridMotion",
  "description": "Perspective moving grid lines based on cusror position.",
  "dependencies": [
    "gsap"
  ],
  "files": [
    {
      "path": "public/ts/tailwind/src/ts-tailwind/Backgrounds/GridMotion/GridMotion.tsx",
      "content": "import { useEffect, useRef, FC } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\ninterface GridMotionProps {\r\n  items?: string[];\r\n  gradientColor?: string;\r\n}\r\n\r\nconst GridMotion: FC<GridMotionProps> = ({ items = [], gradientColor = 'black' }) => {\r\n  const gridRef = useRef<HTMLDivElement>(null);\r\n  const rowRefs = useRef<(HTMLDivElement | null)[]>([]);\r\n  const mouseXRef = useRef<number>(window.innerWidth / 2);\r\n\r\n  const totalItems = 28;\r\n  const defaultItems = Array.from({ length: totalItems }, (_, index) => `Item ${index + 1}`);\r\n  const combinedItems = items.length > 0 ? items.slice(0, totalItems) : defaultItems;\r\n\r\n  useEffect(() => {\r\n    gsap.ticker.lagSmoothing(0);\r\n\r\n    const handleMouseMove = (e: MouseEvent): void => {\r\n      mouseXRef.current = e.clientX;\r\n    };\r\n\r\n    const updateMotion = (): void => {\r\n      const maxMoveAmount = 300;\r\n      const baseDuration = 0.8;\r\n      const inertiaFactors = [0.6, 0.4, 0.3, 0.2];\r\n\r\n      rowRefs.current.forEach((row, index) => {\r\n        if (row) {\r\n          const direction = index % 2 === 0 ? 1 : -1;\r\n          const moveAmount = ((mouseXRef.current / window.innerWidth) * maxMoveAmount - maxMoveAmount / 2) * direction;\r\n\r\n          gsap.to(row, {\r\n            x: moveAmount,\r\n            duration: baseDuration + inertiaFactors[index % inertiaFactors.length],\r\n            ease: 'power3.out',\r\n            overwrite: 'auto'\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    const removeAnimationLoop = gsap.ticker.add(updateMotion);\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      removeAnimationLoop();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={gridRef} className=\"h-full w-full overflow-hidden\">\r\n      <section\r\n        className=\"w-full h-screen overflow-hidden relative flex items-center justify-center\"\r\n        style={{\r\n          background: `radial-gradient(circle, ${gradientColor} 0%, transparent 100%)`\r\n        }}\r\n      >\r\n        <div className=\"absolute inset-0 pointer-events-none z-[4] bg-[length:250px]\"></div>\r\n        <div className=\"gap-4 flex-none relative w-[150vw] h-[150vh] grid grid-rows-4 grid-cols-1 rotate-[-15deg] origin-center z-[2]\">\r\n          {Array.from({ length: 4 }, (_, rowIndex) => (\r\n            <div\r\n              key={rowIndex}\r\n              className=\"grid gap-4 grid-cols-7\"\r\n              style={{ willChange: 'transform, filter' }}\r\n              ref={el => {\r\n                if (el) rowRefs.current[rowIndex] = el;\r\n              }}\r\n            >\r\n              {Array.from({ length: 7 }, (_, itemIndex) => {\r\n                const content = combinedItems[rowIndex * 7 + itemIndex];\r\n                return (\r\n                  <div key={itemIndex} className=\"relative\">\r\n                    <div className=\"relative w-full h-full overflow-hidden rounded-[10px] bg-[#111] flex items-center justify-center text-white text-[1.5rem]\">\r\n                      {typeof content === 'string' && content.startsWith('http') ? (\r\n                        <div\r\n                          className=\"w-full h-full bg-cover bg-center absolute top-0 left-0\"\r\n                          style={{ backgroundImage: `url(${content})` }}\r\n                        ></div>\r\n                      ) : (\r\n                        <div className=\"p-4 text-center z-[1]\">{content}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"relative w-full h-full top-0 left-0 pointer-events-none\"></div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridMotion;\r\n",
      "type": "registry:component"
    }
  ]
}