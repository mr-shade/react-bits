{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ProfileCard-TS-CSS",
  "type": "registry:block",
  "title": "ProfileCard",
  "description": "Animated profile card glare with 3D hover effect.",
  "files": [
    {
      "path": "public/ts/default/src/ts-default/Components/ProfileCard/ProfileCard.tsx",
      "content": "import React, { useEffect, useRef, useCallback, useMemo } from 'react';\r\nimport './ProfileCard.css';\r\n\r\ninterface ProfileCardProps {\r\n  avatarUrl: string;\r\n  iconUrl?: string;\r\n  grainUrl?: string;\r\n  behindGradient?: string;\r\n  innerGradient?: string;\r\n  showBehindGradient?: boolean;\r\n  className?: string;\r\n  enableTilt?: boolean;\r\n  enableMobileTilt?: boolean;\r\n  mobileTiltSensitivity?: number;\r\n  miniAvatarUrl?: string;\r\n  name?: string;\r\n  title?: string;\r\n  handle?: string;\r\n  status?: string;\r\n  contactText?: string;\r\n  showUserInfo?: boolean;\r\n  onContactClick?: () => void;\r\n}\r\n\r\nconst DEFAULT_BEHIND_GRADIENT =\r\n  'radial-gradient(farthest-side circle at var(--pointer-x) var(--pointer-y),hsla(266,100%,90%,var(--card-opacity)) 4%,hsla(266,50%,80%,calc(var(--card-opacity)*0.75)) 10%,hsla(266,25%,70%,calc(var(--card-opacity)*0.5)) 50%,hsla(266,0%,60%,0) 100%),radial-gradient(35% 52% at 55% 20%,#00ffaac4 0%,#073aff00 100%),radial-gradient(100% 100% at 50% 50%,#00c1ffff 1%,#073aff00 76%),conic-gradient(from 124deg at 50% 50%,#c137ffff 0%,#07c6ffff 40%,#07c6ffff 60%,#c137ffff 100%)';\r\n\r\nconst DEFAULT_INNER_GRADIENT = 'linear-gradient(145deg,#60496e8c 0%,#71C4FF44 100%)';\r\n\r\nconst ANIMATION_CONFIG = {\r\n  SMOOTH_DURATION: 600,\r\n  INITIAL_DURATION: 1500,\r\n  INITIAL_X_OFFSET: 70,\r\n  INITIAL_Y_OFFSET: 60,\r\n  DEVICE_BETA_OFFSET: 20\r\n} as const;\r\n\r\nconst clamp = (value: number, min = 0, max = 100): number => Math.min(Math.max(value, min), max);\r\n\r\nconst round = (value: number, precision = 3): number => parseFloat(value.toFixed(precision));\r\n\r\nconst adjust = (value: number, fromMin: number, fromMax: number, toMin: number, toMax: number): number =>\r\n  round(toMin + ((toMax - toMin) * (value - fromMin)) / (fromMax - fromMin));\r\n\r\nconst easeInOutCubic = (x: number): number => (x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2);\r\n\r\nconst ProfileCardComponent: React.FC<ProfileCardProps> = ({\r\n  avatarUrl = '<Placeholder for avatar URL>',\r\n  iconUrl = '<Placeholder for icon URL>',\r\n  grainUrl = '<Placeholder for grain URL>',\r\n  behindGradient,\r\n  innerGradient,\r\n  showBehindGradient = true,\r\n  className = '',\r\n  enableTilt = true,\r\n  enableMobileTilt = false,\r\n  mobileTiltSensitivity = 5,\r\n  miniAvatarUrl,\r\n  name = 'Javi A. Torres',\r\n  title = 'Software Engineer',\r\n  handle = 'javicodes',\r\n  status = 'Online',\r\n  contactText = 'Contact',\r\n  showUserInfo = true,\r\n  onContactClick\r\n}) => {\r\n  const wrapRef = useRef<HTMLDivElement>(null);\r\n  const cardRef = useRef<HTMLDivElement>(null);\r\n\r\n  const animationHandlers = useMemo(() => {\r\n    if (!enableTilt) return null;\r\n\r\n    let rafId: number | null = null;\r\n\r\n    const updateCardTransform = (offsetX: number, offsetY: number, card: HTMLElement, wrap: HTMLElement) => {\r\n      const width = card.clientWidth;\r\n      const height = card.clientHeight;\r\n\r\n      const percentX = clamp((100 / width) * offsetX);\r\n      const percentY = clamp((100 / height) * offsetY);\r\n\r\n      const centerX = percentX - 50;\r\n      const centerY = percentY - 50;\r\n\r\n      const properties = {\r\n        '--pointer-x': `${percentX}%`,\r\n        '--pointer-y': `${percentY}%`,\r\n        '--background-x': `${adjust(percentX, 0, 100, 35, 65)}%`,\r\n        '--background-y': `${adjust(percentY, 0, 100, 35, 65)}%`,\r\n        '--pointer-from-center': `${clamp(Math.hypot(percentY - 50, percentX - 50) / 50, 0, 1)}`,\r\n        '--pointer-from-top': `${percentY / 100}`,\r\n        '--pointer-from-left': `${percentX / 100}`,\r\n        '--rotate-x': `${round(-(centerX / 5))}deg`,\r\n        '--rotate-y': `${round(centerY / 4)}deg`\r\n      };\r\n\r\n      Object.entries(properties).forEach(([property, value]) => {\r\n        wrap.style.setProperty(property, value);\r\n      });\r\n    };\r\n\r\n    const createSmoothAnimation = (\r\n      duration: number,\r\n      startX: number,\r\n      startY: number,\r\n      card: HTMLElement,\r\n      wrap: HTMLElement\r\n    ) => {\r\n      const startTime = performance.now();\r\n      const targetX = wrap.clientWidth / 2;\r\n      const targetY = wrap.clientHeight / 2;\r\n\r\n      const animationLoop = (currentTime: number) => {\r\n        const elapsed = currentTime - startTime;\r\n        const progress = clamp(elapsed / duration);\r\n        const easedProgress = easeInOutCubic(progress);\r\n\r\n        const currentX = adjust(easedProgress, 0, 1, startX, targetX);\r\n        const currentY = adjust(easedProgress, 0, 1, startY, targetY);\r\n\r\n        updateCardTransform(currentX, currentY, card, wrap);\r\n\r\n        if (progress < 1) {\r\n          rafId = requestAnimationFrame(animationLoop);\r\n        }\r\n      };\r\n\r\n      rafId = requestAnimationFrame(animationLoop);\r\n    };\r\n\r\n    return {\r\n      updateCardTransform,\r\n      createSmoothAnimation,\r\n      cancelAnimation: () => {\r\n        if (rafId) {\r\n          cancelAnimationFrame(rafId);\r\n          rafId = null;\r\n        }\r\n      }\r\n    };\r\n  }, [enableTilt]);\r\n\r\n  const handlePointerMove = useCallback(\r\n    (event: PointerEvent) => {\r\n      const card = cardRef.current;\r\n      const wrap = wrapRef.current;\r\n\r\n      if (!card || !wrap || !animationHandlers) return;\r\n\r\n      const rect = card.getBoundingClientRect();\r\n      animationHandlers.updateCardTransform(event.clientX - rect.left, event.clientY - rect.top, card, wrap);\r\n    },\r\n    [animationHandlers]\r\n  );\r\n\r\n  const handlePointerEnter = useCallback(() => {\r\n    const card = cardRef.current;\r\n    const wrap = wrapRef.current;\r\n\r\n    if (!card || !wrap || !animationHandlers) return;\r\n\r\n    animationHandlers.cancelAnimation();\r\n    wrap.classList.add('active');\r\n    card.classList.add('active');\r\n  }, [animationHandlers]);\r\n\r\n  const handlePointerLeave = useCallback(\r\n    (event: PointerEvent) => {\r\n      const card = cardRef.current;\r\n      const wrap = wrapRef.current;\r\n\r\n      if (!card || !wrap || !animationHandlers) return;\r\n\r\n      animationHandlers.createSmoothAnimation(\r\n        ANIMATION_CONFIG.SMOOTH_DURATION,\r\n        event.offsetX,\r\n        event.offsetY,\r\n        card,\r\n        wrap\r\n      );\r\n      wrap.classList.remove('active');\r\n      card.classList.remove('active');\r\n    },\r\n    [animationHandlers]\r\n  );\r\n\r\n  const handleDeviceOrientation = useCallback(\r\n    (event: DeviceOrientationEvent) => {\r\n      const card = cardRef.current;\r\n      const wrap = wrapRef.current;\r\n\r\n      if (!card || !wrap || !animationHandlers) return;\r\n\r\n      const { beta, gamma } = event;\r\n      if (!beta || !gamma) return;\r\n\r\n      animationHandlers.updateCardTransform(\r\n        card.clientHeight / 2 + gamma * mobileTiltSensitivity,\r\n        card.clientWidth / 2 + (beta - ANIMATION_CONFIG.DEVICE_BETA_OFFSET) * mobileTiltSensitivity,\r\n        card,\r\n        wrap\r\n      );\r\n    },\r\n    [animationHandlers, mobileTiltSensitivity]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!enableTilt || !animationHandlers) return;\r\n\r\n    const card = cardRef.current;\r\n    const wrap = wrapRef.current;\r\n\r\n    if (!card || !wrap) return;\r\n\r\n    const pointerMoveHandler = handlePointerMove as EventListener;\r\n    const pointerEnterHandler = handlePointerEnter as EventListener;\r\n    const pointerLeaveHandler = handlePointerLeave as EventListener;\r\n    const deviceOrientationHandler = handleDeviceOrientation as EventListener;\r\n\r\n    const handleClick = () => {\r\n      if (!enableMobileTilt || location.protocol !== 'https:') return;\r\n      if (typeof (window.DeviceMotionEvent as any).requestPermission === 'function') {\r\n        (window.DeviceMotionEvent as any)\r\n          .requestPermission()\r\n          .then((state: string) => {\r\n            if (state === 'granted') {\r\n              window.addEventListener('deviceorientation', deviceOrientationHandler);\r\n            }\r\n          })\r\n          .catch((err: any) => console.error(err));\r\n      } else {\r\n        window.addEventListener('deviceorientation', deviceOrientationHandler);\r\n      }\r\n    };\r\n\r\n    card.addEventListener('pointerenter', pointerEnterHandler);\r\n    card.addEventListener('pointermove', pointerMoveHandler);\r\n    card.addEventListener('pointerleave', pointerLeaveHandler);\r\n    card.addEventListener('click', handleClick);\r\n\r\n    const initialX = wrap.clientWidth - ANIMATION_CONFIG.INITIAL_X_OFFSET;\r\n    const initialY = ANIMATION_CONFIG.INITIAL_Y_OFFSET;\r\n\r\n    animationHandlers.updateCardTransform(initialX, initialY, card, wrap);\r\n    animationHandlers.createSmoothAnimation(ANIMATION_CONFIG.INITIAL_DURATION, initialX, initialY, card, wrap);\r\n\r\n    return () => {\r\n      card.removeEventListener('pointerenter', pointerEnterHandler);\r\n      card.removeEventListener('pointermove', pointerMoveHandler);\r\n      card.removeEventListener('pointerleave', pointerLeaveHandler);\r\n      card.removeEventListener('click', handleClick);\r\n      window.removeEventListener('deviceorientation', deviceOrientationHandler);\r\n      animationHandlers.cancelAnimation();\r\n    };\r\n  }, [\r\n    enableTilt,\r\n    enableMobileTilt,\r\n    animationHandlers,\r\n    handlePointerMove,\r\n    handlePointerEnter,\r\n    handlePointerLeave,\r\n    handleDeviceOrientation\r\n  ]);\r\n\r\n  const cardStyle = useMemo(\r\n    () =>\r\n      ({\r\n        '--icon': iconUrl ? `url(${iconUrl})` : 'none',\r\n        '--grain': grainUrl ? `url(${grainUrl})` : 'none',\r\n        '--behind-gradient': showBehindGradient ? (behindGradient ?? DEFAULT_BEHIND_GRADIENT) : 'none',\r\n        '--inner-gradient': innerGradient ?? DEFAULT_INNER_GRADIENT\r\n      }) as React.CSSProperties,\r\n    [iconUrl, grainUrl, showBehindGradient, behindGradient, innerGradient]\r\n  );\r\n\r\n  const handleContactClick = useCallback(() => {\r\n    onContactClick?.();\r\n  }, [onContactClick]);\r\n\r\n  return (\r\n    <div ref={wrapRef} className={`pc-card-wrapper ${className}`.trim()} style={cardStyle}>\r\n      <section ref={cardRef} className=\"pc-card\">\r\n        <div className=\"pc-inside\">\r\n          <div className=\"pc-shine\" />\r\n          <div className=\"pc-glare\" />\r\n          <div className=\"pc-content pc-avatar-content\">\r\n            <img\r\n              className=\"avatar\"\r\n              src={avatarUrl}\r\n              alt={`${name || 'User'} avatar`}\r\n              loading=\"lazy\"\r\n              onError={e => {\r\n                const target = e.target as HTMLImageElement;\r\n                target.style.display = 'none';\r\n              }}\r\n            />\r\n            {showUserInfo && (\r\n              <div className=\"pc-user-info\">\r\n                <div className=\"pc-user-details\">\r\n                  <div className=\"pc-mini-avatar\">\r\n                    <img\r\n                      src={miniAvatarUrl || avatarUrl}\r\n                      alt={`${name || 'User'} mini avatar`}\r\n                      loading=\"lazy\"\r\n                      onError={e => {\r\n                        const target = e.target as HTMLImageElement;\r\n                        target.style.opacity = '0.5';\r\n                        target.src = avatarUrl;\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"pc-user-text\">\r\n                    <div className=\"pc-handle\">@{handle}</div>\r\n                    <div className=\"pc-status\">{status}</div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"pc-contact-btn\"\r\n                  onClick={handleContactClick}\r\n                  style={{ pointerEvents: 'auto' }}\r\n                  type=\"button\"\r\n                  aria-label={`Contact ${name || 'user'}`}\r\n                >\r\n                  {contactText}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"pc-content\">\r\n            <div className=\"pc-details\">\r\n              <h3>{name}</h3>\r\n              <p>{title}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileCard = React.memo(ProfileCardComponent);\r\n\r\nexport default ProfileCard;\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/ts/default/src/ts-default/Components/ProfileCard/ProfileCard.css",
      "content": ":root {\r\n  --pointer-x: 50%;\r\n  --pointer-y: 50%;\r\n  --pointer-from-center: 0;\r\n  --pointer-from-top: 0.5;\r\n  --pointer-from-left: 0.5;\r\n  --card-opacity: 0;\r\n  --rotate-x: 0deg;\r\n  --rotate-y: 0deg;\r\n  --background-x: 50%;\r\n  --background-y: 50%;\r\n  --grain: none;\r\n  --icon: none;\r\n  --behind-gradient: none;\r\n  --inner-gradient: none;\r\n  --sunpillar-1: hsl(2, 100%, 73%);\r\n  --sunpillar-2: hsl(53, 100%, 69%);\r\n  --sunpillar-3: hsl(93, 100%, 69%);\r\n  --sunpillar-4: hsl(176, 100%, 76%);\r\n  --sunpillar-5: hsl(228, 100%, 74%);\r\n  --sunpillar-6: hsl(283, 100%, 73%);\r\n  --sunpillar-clr-1: var(--sunpillar-1);\r\n  --sunpillar-clr-2: var(--sunpillar-2);\r\n  --sunpillar-clr-3: var(--sunpillar-3);\r\n  --sunpillar-clr-4: var(--sunpillar-4);\r\n  --sunpillar-clr-5: var(--sunpillar-5);\r\n  --sunpillar-clr-6: var(--sunpillar-6);\r\n  --card-radius: 30px;\r\n}\r\n\r\n.pc-card-wrapper {\r\n  perspective: 500px;\r\n  transform: translate3d(0, 0, 0.1px);\r\n  position: relative;\r\n  touch-action: none;\r\n}\r\n\r\n.pc-card-wrapper::before {\r\n  content: '';\r\n  position: absolute;\r\n  inset: -10px;\r\n  background: inherit;\r\n  background-position: inherit;\r\n  border-radius: inherit;\r\n  transition: all 0.5s ease;\r\n  filter: contrast(2) saturate(2) blur(36px);\r\n  transform: scale(0.8) translate3d(0, 0, 0.1px);\r\n  background-size: 100% 100%;\r\n  background-image: var(--behind-gradient);\r\n}\r\n\r\n.pc-card-wrapper:hover,\r\n.pc-card-wrapper.active {\r\n  --card-opacity: 1;\r\n}\r\n\r\n.pc-card-wrapper:hover::before,\r\n.pc-card-wrapper.active::before {\r\n  filter: contrast(1) saturate(2) blur(40px) opacity(1);\r\n  transform: scale(0.9) translate3d(0, 0, 0.1px);\r\n}\r\n\r\n.pc-card {\r\n  height: 80svh;\r\n  max-height: 540px;\r\n  display: grid;\r\n  aspect-ratio: 0.718;\r\n  border-radius: var(--card-radius);\r\n  position: relative;\r\n  background-blend-mode: color-dodge, normal, normal, normal;\r\n  animation: glow-bg 12s linear infinite;\r\n  box-shadow: rgba(0, 0, 0, 0.8) calc((var(--pointer-from-left) * 10px) - 3px)\r\n    calc((var(--pointer-from-top) * 20px) - 6px) 20px -5px;\r\n  transition: transform 1s ease;\r\n  transform: translate3d(0, 0, 0.1px) rotateX(0deg) rotateY(0deg);\r\n  background-size: 100% 100%;\r\n  background-position:\r\n    0 0,\r\n    0 0,\r\n    50% 50%,\r\n    0 0;\r\n  background-image:\r\n    radial-gradient(\r\n      farthest-side circle at var(--pointer-x) var(--pointer-y),\r\n      hsla(266, 100%, 90%, var(--card-opacity)) 4%,\r\n      hsla(266, 50%, 80%, calc(var(--card-opacity) * 0.75)) 10%,\r\n      hsla(266, 25%, 70%, calc(var(--card-opacity) * 0.5)) 50%,\r\n      hsla(266, 0%, 60%, 0) 100%\r\n    ),\r\n    radial-gradient(35% 52% at 55% 20%, #00ffaac4 0%, #073aff00 100%),\r\n    radial-gradient(100% 100% at 50% 50%, #00c1ffff 1%, #073aff00 76%),\r\n    conic-gradient(from 124deg at 50% 50%, #c137ffff 0%, #07c6ffff 40%, #07c6ffff 60%, #c137ffff 100%);\r\n  overflow: hidden;\r\n}\r\n\r\n.pc-card:hover,\r\n.pc-card.active {\r\n  transition: none;\r\n  transform: translate3d(0, 0, 0.1px) rotateX(var(--rotate-y)) rotateY(var(--rotate-x));\r\n}\r\n\r\n.pc-card * {\r\n  display: grid;\r\n  grid-area: 1/-1;\r\n  border-radius: var(--card-radius);\r\n  transform: translate3d(0, 0, 0.1px);\r\n  pointer-events: none;\r\n}\r\n\r\n.pc-inside {\r\n  inset: 1px;\r\n  position: absolute;\r\n  background-image: var(--inner-gradient);\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  transform: translate3d(0, 0, 0.01px);\r\n}\r\n\r\n.pc-shine {\r\n  mask-image: var(--icon);\r\n  mask-mode: luminance;\r\n  mask-repeat: repeat;\r\n  mask-size: 150%;\r\n  mask-position: top calc(200% - (var(--background-y) * 5)) left calc(100% - var(--background-x));\r\n  transition: filter 0.6s ease;\r\n  filter: brightness(0.66) contrast(1.33) saturate(0.33) opacity(0.5);\r\n  animation: holo-bg 18s linear infinite;\r\n  mix-blend-mode: color-dodge;\r\n}\r\n\r\n.pc-shine,\r\n.pc-shine::after {\r\n  --space: 5%;\r\n  --angle: -45deg;\r\n  transform: translate3d(0, 0, 1px);\r\n  overflow: hidden;\r\n  z-index: 3;\r\n  background: transparent;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-image:\r\n    repeating-linear-gradient(\r\n      0deg,\r\n      var(--sunpillar-clr-1) calc(var(--space) * 1),\r\n      var(--sunpillar-clr-2) calc(var(--space) * 2),\r\n      var(--sunpillar-clr-3) calc(var(--space) * 3),\r\n      var(--sunpillar-clr-4) calc(var(--space) * 4),\r\n      var(--sunpillar-clr-5) calc(var(--space) * 5),\r\n      var(--sunpillar-clr-6) calc(var(--space) * 6),\r\n      var(--sunpillar-clr-1) calc(var(--space) * 7)\r\n    ),\r\n    repeating-linear-gradient(\r\n      var(--angle),\r\n      #0e152e 0%,\r\n      hsl(180, 10%, 60%) 3.8%,\r\n      hsl(180, 29%, 66%) 4.5%,\r\n      hsl(180, 10%, 60%) 5.2%,\r\n      #0e152e 10%,\r\n      #0e152e 12%\r\n    ),\r\n    radial-gradient(\r\n      farthest-corner circle at var(--pointer-x) var(--pointer-y),\r\n      hsla(0, 0%, 0%, 0.1) 12%,\r\n      hsla(0, 0%, 0%, 0.15) 20%,\r\n      hsla(0, 0%, 0%, 0.25) 120%\r\n    );\r\n  background-position:\r\n    0 var(--background-y),\r\n    var(--background-x) var(--background-y),\r\n    center;\r\n  background-blend-mode: color, hard-light;\r\n  background-size:\r\n    500% 500%,\r\n    300% 300%,\r\n    200% 200%;\r\n  background-repeat: repeat;\r\n}\r\n\r\n.pc-shine::before,\r\n.pc-shine::after {\r\n  content: '';\r\n  background-position: center;\r\n  background-size: cover;\r\n  grid-area: 1/1;\r\n  opacity: 0;\r\n}\r\n\r\n.pc-card:hover .pc-shine,\r\n.pc-card.active .pc-shine {\r\n  filter: brightness(0.85) contrast(1.5) saturate(0.5);\r\n  animation: none;\r\n}\r\n\r\n.pc-card:hover .pc-shine::before,\r\n.pc-card.active .pc-shine::before,\r\n.pc-card:hover .pc-shine::after,\r\n.pc-card.active .pc-shine::after {\r\n  opacity: 1;\r\n}\r\n\r\n.pc-shine::before {\r\n  background-image:\r\n    linear-gradient(\r\n      45deg,\r\n      var(--sunpillar-4),\r\n      var(--sunpillar-5),\r\n      var(--sunpillar-6),\r\n      var(--sunpillar-1),\r\n      var(--sunpillar-2),\r\n      var(--sunpillar-3)\r\n    ),\r\n    radial-gradient(circle at var(--pointer-x) var(--pointer-y), hsl(0, 0%, 70%) 0%, hsla(0, 0%, 30%, 0.2) 90%),\r\n    var(--grain);\r\n  background-size:\r\n    250% 250%,\r\n    100% 100%,\r\n    220px 220px;\r\n  background-position:\r\n    var(--pointer-x) var(--pointer-y),\r\n    center,\r\n    calc(var(--pointer-x) * 0.01) calc(var(--pointer-y) * 0.01);\r\n  background-blend-mode: color-dodge;\r\n  filter: brightness(calc(2 - var(--pointer-from-center))) contrast(calc(var(--pointer-from-center) + 2))\r\n    saturate(calc(0.5 + var(--pointer-from-center)));\r\n  mix-blend-mode: luminosity;\r\n}\r\n\r\n.pc-shine::after {\r\n  background-position:\r\n    0 var(--background-y),\r\n    calc(var(--background-x) * 0.4) calc(var(--background-y) * 0.5),\r\n    center;\r\n  background-size:\r\n    200% 300%,\r\n    700% 700%,\r\n    100% 100%;\r\n  mix-blend-mode: difference;\r\n  filter: brightness(0.8) contrast(1.5);\r\n}\r\n\r\n.pc-glare {\r\n  transform: translate3d(0, 0, 1.1px);\r\n  overflow: hidden;\r\n  background-image: radial-gradient(\r\n    farthest-corner circle at var(--pointer-x) var(--pointer-y),\r\n    hsl(248, 25%, 80%) 12%,\r\n    hsla(207, 40%, 30%, 0.8) 90%\r\n  );\r\n  mix-blend-mode: overlay;\r\n  filter: brightness(0.8) contrast(1.2);\r\n  z-index: 4;\r\n}\r\n\r\n.pc-avatar-content {\r\n  mix-blend-mode: screen;\r\n  overflow: hidden;\r\n}\r\n\r\n.pc-avatar-content .avatar {\r\n  width: 100%;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%) scale(1);\r\n  bottom: 2px;\r\n  opacity: calc(1.75 - var(--pointer-from-center));\r\n}\r\n\r\n.pc-avatar-content::before {\r\n  content: '';\r\n  position: absolute;\r\n  inset: 0;\r\n  z-index: 1;\r\n  backdrop-filter: blur(30px);\r\n  mask: linear-gradient(\r\n    to bottom,\r\n    rgba(0, 0, 0, 0) 0%,\r\n    rgba(0, 0, 0, 0) 60%,\r\n    rgba(0, 0, 0, 1) 90%,\r\n    rgba(0, 0, 0, 1) 100%\r\n  );\r\n  pointer-events: none;\r\n}\r\n\r\n.pc-user-info {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 20px;\r\n  right: 20px;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(30px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 15px;\r\n  padding: 12px 14px;\r\n  pointer-events: auto;\r\n}\r\n\r\n.pc-user-details {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.pc-mini-avatar {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.pc-mini-avatar img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.pc-user-text {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n}\r\n\r\n.pc-handle {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  line-height: 1;\r\n}\r\n\r\n.pc-status {\r\n  font-size: 14px;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  line-height: 1;\r\n}\r\n\r\n.pc-contact-btn {\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 8px;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  backdrop-filter: blur(10px);\r\n}\r\n\r\n.pc-contact-btn:hover {\r\n  border-color: rgba(255, 255, 255, 0.4);\r\n  transform: translateY(-1px);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.pc-content {\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  position: relative;\r\n  transform: translate3d(\r\n    calc(var(--pointer-from-left) * -6px + 3px),\r\n    calc(var(--pointer-from-top) * -6px + 3px),\r\n    0.1px\r\n  ) !important;\r\n  z-index: 5;\r\n  mix-blend-mode: luminosity;\r\n}\r\n\r\n.pc-details {\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 3em;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.pc-details h3 {\r\n  font-weight: 600;\r\n  margin: 0;\r\n  font-size: min(5svh, 3em);\r\n  margin: 0;\r\n  background-image: linear-gradient(to bottom, #fff, #6f6fbe);\r\n  background-size: 1em 1.5em;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n}\r\n\r\n.pc-details p {\r\n  font-weight: 600;\r\n  position: relative;\r\n  top: -12px;\r\n  white-space: nowrap;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  width: min-content;\r\n  background-image: linear-gradient(to bottom, #fff, #4a4ac0);\r\n  background-size: 1em 1.5em;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n}\r\n\r\n@keyframes glow-bg {\r\n  0% {\r\n    --bgrotate: 0deg;\r\n  }\r\n\r\n  100% {\r\n    --bgrotate: 360deg;\r\n  }\r\n}\r\n\r\n@keyframes holo-bg {\r\n  0% {\r\n    background-position:\r\n      0 var(--background-y),\r\n      0 0,\r\n      center;\r\n  }\r\n\r\n  100% {\r\n    background-position:\r\n      0 var(--background-y),\r\n      90% 90%,\r\n      center;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .pc-card {\r\n    height: 70svh;\r\n    max-height: 450px;\r\n  }\r\n\r\n  .pc-details {\r\n    top: 2em;\r\n  }\r\n\r\n  .pc-details h3 {\r\n    font-size: min(4svh, 2.5em);\r\n  }\r\n\r\n  .pc-details p {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .pc-user-info {\r\n    bottom: 15px;\r\n    left: 15px;\r\n    right: 15px;\r\n    padding: 10px 12px;\r\n  }\r\n\r\n  .pc-mini-avatar {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n\r\n  .pc-user-details {\r\n    gap: 10px;\r\n  }\r\n\r\n  .pc-handle {\r\n    font-size: 13px;\r\n  }\r\n\r\n  .pc-status {\r\n    font-size: 10px;\r\n  }\r\n\r\n  .pc-contact-btn {\r\n    padding: 6px 12px;\r\n    font-size: 11px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .pc-card {\r\n    height: 60svh;\r\n    max-height: 380px;\r\n  }\r\n\r\n  .pc-details {\r\n    top: 1.5em;\r\n  }\r\n\r\n  .pc-details h3 {\r\n    font-size: min(3.5svh, 2em);\r\n  }\r\n\r\n  .pc-details p {\r\n    font-size: 12px;\r\n    top: -8px;\r\n  }\r\n\r\n  .pc-user-info {\r\n    bottom: 12px;\r\n    left: 12px;\r\n    right: 12px;\r\n    padding: 8px 10px;\r\n    border-radius: 50px;\r\n  }\r\n\r\n  .pc-mini-avatar {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n\r\n  .pc-user-details {\r\n    gap: 8px;\r\n  }\r\n\r\n  .pc-handle {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .pc-status {\r\n    font-size: 9px;\r\n  }\r\n\r\n  .pc-contact-btn {\r\n    padding: 5px 10px;\r\n    font-size: 10px;\r\n    border-radius: 50px;\r\n  }\r\n}\r\n\r\n@media (max-width: 320px) {\r\n  .pc-card {\r\n    height: 55svh;\r\n    max-height: 320px;\r\n  }\r\n\r\n  .pc-details h3 {\r\n    font-size: min(3svh, 1.5em);\r\n  }\r\n\r\n  .pc-details p {\r\n    font-size: 11px;\r\n  }\r\n\r\n  .pc-user-info {\r\n    padding: 6px 8px;\r\n    border-radius: 50px;\r\n  }\r\n\r\n  .pc-mini-avatar {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n\r\n  .pc-user-details {\r\n    gap: 6px;\r\n  }\r\n\r\n  .pc-handle {\r\n    font-size: 11px;\r\n  }\r\n\r\n  .pc-status {\r\n    font-size: 8px;\r\n  }\r\n\r\n  .pc-contact-btn {\r\n    padding: 4px 8px;\r\n    font-size: 9px;\r\n    border-radius: 50px;\r\n  }\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}