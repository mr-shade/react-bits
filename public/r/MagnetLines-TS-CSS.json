{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "MagnetLines-TS-CSS",
  "type": "registry:block",
  "title": "MagnetLines",
  "description": "Animated field lines bend toward the cursor.",
  "files": [
    {
      "path": "public/ts/default/src/ts-default/Animations/MagnetLines/MagnetLines.tsx",
      "content": "import React, { useRef, useEffect, CSSProperties } from 'react';\r\nimport './MagnetLines.css';\r\n\r\ninterface MagnetLinesProps {\r\n  rows?: number;\r\n  columns?: number;\r\n  containerSize?: string;\r\n  lineColor?: string;\r\n  lineWidth?: string;\r\n  lineHeight?: string;\r\n  baseAngle?: number;\r\n  className?: string;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst MagnetLines: React.FC<MagnetLinesProps> = ({\r\n  rows = 9,\r\n  columns = 9,\r\n  containerSize = '80vmin',\r\n  lineColor = '#efefef',\r\n  lineWidth = '1vmin',\r\n  lineHeight = '6vmin',\r\n  baseAngle = -10,\r\n  className = '',\r\n  style = {}\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    const items = container.querySelectorAll<HTMLSpanElement>('span');\r\n\r\n    const onPointerMove = (pointer: { x: number; y: number }) => {\r\n      items.forEach(item => {\r\n        const rect = item.getBoundingClientRect();\r\n        const centerX = rect.x + rect.width / 2;\r\n        const centerY = rect.y + rect.height / 2;\r\n\r\n        const b = pointer.x - centerX;\r\n        const a = pointer.y - centerY;\r\n        const c = Math.sqrt(a * a + b * b) || 1;\r\n        const r = ((Math.acos(b / c) * 180) / Math.PI) * (pointer.y > centerY ? 1 : -1);\r\n\r\n        item.style.setProperty('--rotate', `${r}deg`);\r\n      });\r\n    };\r\n\r\n    const handlePointerMove = (e: PointerEvent) => {\r\n      onPointerMove({ x: e.x, y: e.y });\r\n    };\r\n\r\n    window.addEventListener('pointermove', handlePointerMove);\r\n\r\n    if (items.length) {\r\n      const middleIndex = Math.floor(items.length / 2);\r\n      const rect = items[middleIndex].getBoundingClientRect();\r\n      onPointerMove({ x: rect.x, y: rect.y });\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('pointermove', handlePointerMove);\r\n    };\r\n  }, []);\r\n\r\n  const total = rows * columns;\r\n  const spans = Array.from({ length: total }, (_, i) => (\r\n    <span\r\n      key={i}\r\n      style={\r\n        {\r\n          '--rotate': `${baseAngle}deg`,\r\n          backgroundColor: lineColor,\r\n          width: lineWidth,\r\n          height: lineHeight\r\n        } as CSSProperties\r\n      }\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`magnetLines-container ${className}`}\r\n      style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\r\n        gridTemplateRows: `repeat(${rows}, 1fr)`,\r\n        width: containerSize,\r\n        height: containerSize,\r\n        ...style\r\n      }}\r\n    >\r\n      {spans}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MagnetLines;\r\n",
      "type": "registry:component"
    },
    {
      "path": "public/ts/default/src/ts-default/Animations/MagnetLines/MagnetLines.css",
      "content": ".magnetLines-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(var(--columns), 1fr);\r\n  grid-template-rows: repeat(var(--rows), 1fr);\r\n\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  width: 80vmin;\r\n  height: 80vmin;\r\n}\r\n\r\n.magnetLines-container span {\r\n  display: block;\r\n  transform-origin: center;\r\n  will-change: transform;\r\n  transform: rotate(var(--rotate));\r\n}\r\n",
      "type": "registry:item"
    }
  ]
}